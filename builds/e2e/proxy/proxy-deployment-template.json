{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"resource_prefix": {
			"type": "string",
			"defaultValue": "[concat('e2e-', uniqueString(resourceGroup().id), '-')]"
		},
		"runner_start": {
			"type": "int",
			"defaultValue": 1
		},
		"runner_count": {
			"type": "int",
			"defaultValue": 1
		},
		"runner_vm_size": {
			"defaultValue": "Standard_D2s_v3",
			"type": "string"
		},
		"create_runner_public_ip": {
			"defaultValue": "false",
			"type": "bool"
		},
		"linux_vm_creation_template_uri": {
			"defaultValue": "https://raw.githubusercontent.com/Azure/iotedge/master/builds/e2e/proxy/create-linux-vm-template.json",
			"type": "string"
		},
		"runner_config_script_uri": {
			"defaultValue": "https://raw.githubusercontent.com/Azure/iotedge/master/builds/e2e/proxy/configure_runner.sh",
			"type": "string"
		},
		"create_ssh_keys_script_uri": {
			"defaultValue": "https://raw.githubusercontent.com/Azure/iotedge/master/builds/e2e/proxy/create_ssh_keys.sh",
			"type": "string"
		}
	},
	"variables": {
		"key_vault_name": "[concat(parameters('resource_prefix'), 'kv')]",
		"keygen_script_name": "create_ssh_keys",
		"proxy_vm_name": "[concat(parameters('resource_prefix'), 'proxy-vm')]",
		"runner_prefix": "[concat(parameters('resource_prefix'), 'runner')]",
		"runner_nsg_name": "[concat(parameters('resource_prefix'), 'runner-nsg')]",
		"vnet_name": "[concat(parameters('resource_prefix'), 'vnet')]",
		"subnet_name": "default",
		"username": "azureuser"
	},
	"resources": [{
		"type": "Microsoft.Resources/deploymentScripts",
		"name": "[variables('keygen_script_name')]",
		"apiVersion": "2020-10-01",
		"location": "[resourceGroup().location]",
		"kind": "AzureCLI",
		"properties": {
			"azCliVersion": "2.29.1",
			"cleanupPreference": "OnSuccess",
			"arguments": "[parameters('runner_count')]",
			"primaryScriptUri": "[parameters('create_ssh_keys_script_uri')]",
			"timeout": "PT30M",
			"retentionInterval": "P1D"
		},
		"dependsOn": []
	}, {
		"type": "Microsoft.Resources/deployments",
		"name": "[concat('store_ssh_keys', add(parameters('runner_start'), copyIndex()))]",
		"apiVersion": "2020-06-01",
		"copy": {
			"name": "store_ssh_keys_copy",
			"count": "[parameters('runner_count')]"
		},
		"properties": {
			"mode": "Incremental",
			"template": {
				"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
				"contentVersion": "1.0.0.0",
				"resources": [
					{
						"type": "Microsoft.KeyVault/vaults/secrets",
						"name": "[concat(variables('key_vault_name'), '/', variables('runner_prefix'), add(parameters('runner_start'), copyIndex()), '-ssh-private-key')]",
						"apiVersion": "2019-09-01",
						"properties": {
							"value": "[reference(variables('keygen_script_name')).outputs.keyinfo[copyIndex()].privateKey]"
						}
					}
				]
			}
		},
		"dependsOn": [
			"[variables('keygen_script_name')]"
		]
	}, {
		"type": "Microsoft.Resources/deployments",
		"name": "[concat('create_runner_vm', add(parameters('runner_start'), copyIndex()))]",
		"apiVersion": "2020-06-01",
		"properties": {
			"mode": "Incremental",
			"templateLink": {
				"uri": "[parameters('linux_vm_creation_template_uri')]"
			},
			"parameters": {
				"admin_user": {
					"value": "[variables('username')]"
				},
				"extension_command": {
					"value": "[concat('/bin/bash -c \"set -euo pipefail && curl -x ', variables('proxy_vm_name'), ':3128 ', parameters('runner_config_script_uri'), ' | sudo bash -s -- ', variables('proxy_vm_name'), '\"')]"
				},
				"nic_name": {
					"value": "[concat(variables('runner_prefix'), add(parameters('runner_start'), copyIndex()), '-nic')]"
				},
				"nsg_id": {
					"value": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('runner_nsg_name'))]"
				},
				"ssh_public_key": {
					"value": "[reference(variables('keygen_script_name')).outputs.keyinfo[copyIndex()].publicKey]"
				},
				"vm_name": {
					"value": "[concat(variables('runner_prefix'), add(parameters('runner_start'), copyIndex()), '-vm')]"
				},
				"vm_size": {
					"value": "[parameters('runner_vm_size')]"
				},
				"vnet_subnet_id": {
					"value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet_name'), variables('subnet_name'))]"
				},
				"ip_addr_name": {
					"value": "[if(parameters('create_runner_public_ip'), concat(variables('runner_prefix'), add(parameters('runner_start'), copyIndex()), '-ip'), '!')]"
				}
			}
		},
		"copy": {
			"name": "runner_vm_copy",
			"count": "[parameters('runner_count')]"
		},
		"dependsOn": [
			"[variables('keygen_script_name')]"
		]
	}]
}
